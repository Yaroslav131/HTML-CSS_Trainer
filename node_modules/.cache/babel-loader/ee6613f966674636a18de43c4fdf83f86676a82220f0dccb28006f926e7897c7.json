{"ast":null,"code":"Object.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nvar PropTypes = require('prop-types');\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar PropTypes__namespace = /*#__PURE__*/_interopNamespace(PropTypes);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar ProgressBar = function (_a) {\n  var bgColor = _a.bgColor,\n    completed = _a.completed,\n    baseBgColor = _a.baseBgColor,\n    height = _a.height,\n    width = _a.width,\n    margin = _a.margin,\n    padding = _a.padding,\n    borderRadius = _a.borderRadius,\n    labelAlignment = _a.labelAlignment,\n    labelColor = _a.labelColor,\n    labelSize = _a.labelSize,\n    isLabelVisible = _a.isLabelVisible,\n    customLabelStyles = _a.customLabelStyles,\n    transitionDuration = _a.transitionDuration,\n    transitionTimingFunction = _a.transitionTimingFunction,\n    className = _a.className,\n    dir = _a.dir,\n    ariaValuemin = _a.ariaValuemin,\n    ariaValuemax = _a.ariaValuemax,\n    ariaValuetext = _a.ariaValuetext,\n    maxCompleted = _a.maxCompleted,\n    customLabel = _a.customLabel,\n    animateOnRender = _a.animateOnRender,\n    barContainerClassName = _a.barContainerClassName,\n    completedClassName = _a.completedClassName,\n    labelClassName = _a.labelClassName,\n    _b = _a.initCompletedOnAnimation,\n    initCompletedOnAnimation = _b === void 0 ? 0 : _b;\n  var getAlignment = function (alignmentOption) {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n  var alignment = getAlignment(labelAlignment);\n  var initCompletedOnAnimationStr = typeof initCompletedOnAnimation === \"number\" ? \"\".concat(initCompletedOnAnimation, \"%\") : initCompletedOnAnimation;\n  var getFillerWidth = function (maxCompletedValue, completedValue) {\n    if (maxCompletedValue) {\n      var ratio = Number(completedValue) / maxCompletedValue;\n      return ratio > 1 ? \"100%\" : \"\".concat(ratio * 100, \"%\");\n    }\n    return initCompletedOnAnimationStr;\n  };\n  var fillerWidth = getFillerWidth(maxCompleted, completed);\n  var _c = React__namespace.useState(initCompletedOnAnimationStr),\n    initWidth = _c[0],\n    setInitWidth = _c[1];\n  var containerStyles = {\n    height: height,\n    background: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n    overflow: \"hidden\"\n  };\n  var fillerStyles = {\n    height: height,\n    width: animateOnRender ? initWidth : fillerWidth,\n    background: bgColor,\n    transition: \"width \".concat(transitionDuration || \"1s\", \" \").concat(transitionTimingFunction || \"ease-in-out\"),\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: labelAlignment !== \"outside\" && alignment ? alignment : \"normal\"\n  };\n  var labelStyles = __assign({\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\"\n  }, customLabelStyles);\n  var outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\"\n  };\n  var completedStr = typeof completed === \"number\" ? \"\".concat(completed, \"%\") : \"\".concat(completed);\n  var labelStr = customLabel ? customLabel : completedStr;\n  React__namespace.useEffect(function () {\n    if (animateOnRender) {\n      requestAnimationFrame(function () {\n        return setInitWidth(fillerWidth);\n      });\n    }\n  }, [fillerWidth, animateOnRender]);\n  return React__namespace.createElement(\"div\", {\n    style: className ? undefined : outsideStyles,\n    className: className,\n    dir: dir,\n    role: \"progressbar\",\n    \"aria-valuenow\": parseFloat(labelStr),\n    \"aria-valuemin\": ariaValuemin,\n    \"aria-valuemax\": ariaValuemax,\n    \"aria-valuetext\": \"\".concat(ariaValuetext === null ? labelStr : ariaValuetext)\n  }, React__namespace.createElement(\"div\", {\n    style: barContainerClassName ? undefined : containerStyles,\n    className: barContainerClassName\n  }, React__namespace.createElement(\"div\", {\n    style: completedClassName ? undefined : fillerStyles,\n    className: completedClassName\n  }, labelAlignment !== \"outside\" && React__namespace.createElement(\"span\", {\n    style: labelClassName ? undefined : labelStyles,\n    className: labelClassName\n  }, labelStr))), labelAlignment === \"outside\" && React__namespace.createElement(\"span\", {\n    style: labelClassName ? undefined : labelStyles,\n    className: labelClassName\n  }, labelStr));\n};\nProgressBar.propTypes = {\n  completed: PropTypes__namespace.oneOfType([PropTypes__namespace.string, PropTypes__namespace.number]).isRequired,\n  bgColor: PropTypes__namespace.string,\n  baseBgColor: PropTypes__namespace.string,\n  height: PropTypes__namespace.string,\n  width: PropTypes__namespace.string,\n  borderRadius: PropTypes__namespace.string,\n  margin: PropTypes__namespace.string,\n  padding: PropTypes__namespace.string,\n  labelAlignment: PropTypes__namespace.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes__namespace.string,\n  labelSize: PropTypes__namespace.string,\n  isLabelVisible: PropTypes__namespace.bool,\n  className: PropTypes__namespace.string,\n  dir: PropTypes__namespace.oneOf([\"rtl\", \"ltr\", \"auto\"]),\n  maxCompleted: PropTypes__namespace.number,\n  customLabel: PropTypes__namespace.string,\n  animateOnRender: PropTypes__namespace.bool,\n  barContainerClassName: PropTypes__namespace.string,\n  completedClassName: PropTypes__namespace.string,\n  labelClassName: PropTypes__namespace.string,\n  initCompletedOnAnimation: PropTypes__namespace.oneOfType([PropTypes__namespace.string, PropTypes__namespace.number])\n};\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n  dir: \"ltr\",\n  ariaValuemin: 0,\n  ariaValuemax: 100,\n  ariaValuetext: null,\n  maxCompleted: 100,\n  animateOnRender: false,\n  initCompletedOnAnimation: 0\n};\nexports[\"default\"] = ProgressBar;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCM,eAAW,GAA+B,UAACA,EA4BhD;EA3BC,WAAO;IACPC,SAAS;IACTC,WAAW;IACXC,MAAM;IACNC,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,cAAc;IACdC,UAAU;IACVC,SAAS;IACTC,cAAc;IACdC,iBAAiB;IACjBC,kBAAkB;IAClBC,wBAAwB;IACxBC,SAAS;IACTC,GAAG;IACHC,YAAY;IACZC,YAAY;IACZC,aAAa;IACbC,YAAY;IACZC,WAAW;IACXC,eAAe;IACfC,qBAAqB;IACrBC,kBAAkB;IAClBC,cAAc;IACdC,gCAA4B;IAA5BC,wBAAwB,mBAAG,CAAC;EAE5B,IAAMC,YAAY,GAAG,UACnBC,eAAmD;IAEnD,IAAIA,eAAe,KAAK,MAAM,EAAE;MAC9B,OAAO,YAAY;IACpB,OAAM,IAAIA,eAAe,KAAK,QAAQ,EAAE;MACvC,OAAO,QAAQ;IAChB,OAAM,IAAIA,eAAe,KAAK,OAAO,EAAE;MACtC,OAAO,UAAU;IAClB,OAAM;MACL,OAAO,IAAI;IACZ;EACH,CAAC;EAED,IAAMC,SAAS,GAAGF,YAAY,CAACpB,cAAc,CAAC;EAE9C,IAAMuB,2BAA2B,GAC/B,OAAOJ,wBAAwB,KAAK,QAAQ,GACxC,EAAG,gCAAwB,EAAG,OAC9BA,wBAAwB;EAE9B,IAAMK,cAAc,GAAG,UACrBC,iBAAmD,EACnDC,cAA6C;IAE7C,IAAID,iBAAiB,EAAE;MACrB,IAAME,KAAK,GAAGC,MAAM,CAACF,cAAc,CAAC,GAAGD,iBAAiB;MACxD,OAAOE,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,EAAG,aAAK,GAAG,GAAG,MAAG;IAC9C;IACD,OAAOJ,2BAA2B;EACpC,CAAC;EAED,IAAMM,WAAW,GAAGL,cAAc,CAACZ,YAAY,EAAEnB,SAAS,CAAC;EAErD,MAA4B,mBAAK,CAACqC,QAAQ,CAC9CP,2BAA2B,CAC5B;IAFMQ,SAAS;IAAEC,YAAY,QAE7B;EAED,IAAMC,eAAe,GAAwB;IAC3CtC,MAAM,EAAEA,MAAM;IACduC,UAAU,EAAExC,WAAW;IACvBK,YAAY,EAAEA,YAAY;IAC1BD,OAAO,EAAEA,OAAO;IAChBF,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACdsC,QAAQ,EAAE;GACX;EAED,IAAMC,YAAY,GAAwB;IACxCzC,MAAM,EAAEA,MAAM;IACdC,KAAK,EAAEkB,eAAe,GAAGiB,SAAS,GAAGF,WAAW;IAChDK,UAAU,EAAEG,OAAO;IACnBC,UAAU,EAAE,gBAASjC,kBAAkB,IAAI,IAAI,EAC7C,oCAAwB,IAAI,aAAa,CACzC;IACFN,YAAY,EAAE,SAAS;IACvBwC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EACZzC,cAAc,KAAK,SAAS,IAAIsB,SAAS,GAAGA,SAAS,GAAG;GAC3D;EAED,IAAMoB,WAAW,GACfC;IAAA7C,OAAO,EAAEE,cAAc,KAAK,SAAS,GAAG,WAAW,GAAG,KAAK;IAC3D4C,KAAK,EAAE3C,UAAU;IACjB4C,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE5C,SAAS;IACnBqC,OAAO,EAAE,CAACpC,cAAc,GAAG,MAAM,GAAG;EAAS,CAC1C,mBAAiB,CACrB;EAED,IAAM4C,aAAa,GAAG;IACpBR,OAAO,EAAEvC,cAAc,KAAK,SAAS,GAAG,MAAM,GAAG,SAAS;IAC1DwC,UAAU,EAAExC,cAAc,KAAK,SAAS,GAAG,QAAQ,GAAG;GACvD;EAED,IAAMgD,YAAY,GAChB,OAAOvD,SAAS,KAAK,QAAQ,GAAG,EAAG,iBAAS,MAAG,GAAG,EAAG,iBAAS,CAAE;EAElE,IAAMwD,QAAQ,GAAGpC,WAAW,GAAGA,WAAW,GAAGmC,YAAY;EAEzDE,gBAAK,CAACC,SAAS,CAAC;IACd,IAAIrC,eAAe,EAAE;MACnBsC,qBAAqB,CAAC,YAAM;QAAA,mBAAY,CAACvB,WAAW,CAAC;MAAA,EAAC;IACvD;EACH,CAAC,EAAE,CAACA,WAAW,EAAEf,eAAe,CAAC,CAAC;EAElC,OACEoC;IACEG,KAAK,EAAE9C,SAAS,GAAG+C,SAAS,GAAGP,aAAa;IAC5CxC,SAAS,EAAEA,SAAS;IACpBC,GAAG,EAAEA,GAAG;IACR+C,IAAI,EAAC,aAAa;IAAA,iBACHC,UAAU,CAACP,QAAQ,CAAC;IACpB,6BAAY;IACZ,6BAAY;IACX,4BAAGtC,aAAa,KAAK,IAAI,GAAGsC,QAAQ,GAAGtC,aAAa;EAAE,GAEtEuC;IACEG,KAAK,EAAEtC,qBAAqB,GAAGuC,SAAS,GAAGrB,eAAe;IAC1D1B,SAAS,EAAEQ;EAAqB,GAEhCmC;IACEG,KAAK,EAAErC,kBAAkB,GAAGsC,SAAS,GAAGlB,YAAY;IACpD7B,SAAS,EAAES;EAAkB,GAE5BhB,cAAc,KAAK,SAAS,IAC3BkD,gBACE;IAAAG,KAAK,EAAEpC,cAAc,GAAGqC,SAAS,GAAGZ,WAAW;IAC/CnC,SAAS,EAAEU;EAAc,GAExBgC,QAAQ,CAEZ,CACG,CACF,EACLjD,cAAc,KAAK,SAAS,IAC3BkD;IACEG,KAAK,EAAEpC,cAAc,GAAGqC,SAAS,GAAGZ,WAAW;IAC/CnC,SAAS,EAAEU;EAAc,CAExB,UAAQ,CAEZ,CACG;AAEV;AAEAwC,WAAW,CAACC,SAAS,GAAG;EACtBjE,SAAS,EAAEkE,oBAAS,CAACC,SAAS,CAAC,CAACD,oBAAS,CAACE,MAAM,EAAEF,oBAAS,CAACG,MAAM,CAAC,CAAC,CACjEC,UAAU;EACb1B,OAAO,EAAEsB,oBAAS,CAACE,MAAM;EACzBnE,WAAW,EAAEiE,oBAAS,CAACE,MAAM;EAC7BlE,MAAM,EAAEgE,oBAAS,CAACE,MAAM;EACxBjE,KAAK,EAAE+D,oBAAS,CAACE,MAAM;EACvB9D,YAAY,EAAE4D,oBAAS,CAACE,MAAM;EAC9BhE,MAAM,EAAE8D,oBAAS,CAACE,MAAM;EACxB/D,OAAO,EAAE6D,oBAAS,CAACE,MAAM;EACzB7D,cAAc,EAAE2D,oBAAS,CAACK,KAAK,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;EACvE/D,UAAU,EAAE0D,oBAAS,CAACE,MAAM;EAC5B3D,SAAS,EAAEyD,oBAAS,CAACE,MAAM;EAC3B1D,cAAc,EAAEwD,oBAAS,CAACM,IAAI;EAC9B1D,SAAS,EAAEoD,oBAAS,CAACE,MAAM;EAC3BrD,GAAG,EAAEmD,oBAAS,CAACK,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;EAC5CpD,YAAY,EAAE+C,oBAAS,CAACG,MAAM;EAC9BjD,WAAW,EAAE8C,oBAAS,CAACE,MAAM;EAC7B/C,eAAe,EAAE6C,oBAAS,CAACM,IAAI;EAC/BlD,qBAAqB,EAAE4C,oBAAS,CAACE,MAAM;EACvC7C,kBAAkB,EAAE2C,oBAAS,CAACE,MAAM;EACpC5C,cAAc,EAAE0C,oBAAS,CAACE,MAAM;EAChC1C,wBAAwB,EAAEwC,oBAAS,CAACC,SAAS,CAAC,CAC5CD,oBAAS,CAACE,MAAM,EAChBF,oBAAS,CAACG,MAAM,CACjB;CACF;AAEDL,WAAW,CAACS,YAAY,GAAG;EACzB7B,OAAO,EAAE,SAAS;EAClB1C,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,MAAM;EACbG,YAAY,EAAE,MAAM;EACpBC,cAAc,EAAE,OAAO;EACvBN,WAAW,EAAE,SAAS;EACtBO,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,MAAM;EACjBC,cAAc,EAAE,IAAI;EACpBK,GAAG,EAAE,KAAK;EACVC,YAAY,EAAE,CAAC;EACfC,YAAY,EAAE,GAAG;EACjBC,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE,GAAG;EACjBE,eAAe,EAAE,KAAK;EACtBK,wBAAwB,EAAE;CAC3B","names":["_a","completed","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","customLabelStyles","transitionDuration","transitionTimingFunction","className","dir","ariaValuemin","ariaValuemax","ariaValuetext","maxCompleted","customLabel","animateOnRender","barContainerClassName","completedClassName","labelClassName","_b","initCompletedOnAnimation","getAlignment","alignmentOption","alignment","initCompletedOnAnimationStr","getFillerWidth","maxCompletedValue","completedValue","ratio","Number","fillerWidth","useState","initWidth","setInitWidth","containerStyles","background","overflow","fillerStyles","bgColor","transition","display","alignItems","justifyContent","labelStyles","__assign","color","fontWeight","fontSize","outsideStyles","completedStr","labelStr","React","useEffect","requestAnimationFrame","style","undefined","role","parseFloat","ProgressBar","propTypes","PropTypes","oneOfType","string","number","isRequired","oneOf","bool","defaultProps"],"sources":["D:\\Проекты\\Прудников\\html\\html-css_trainer\\node_modules\\@ramonak\\react-progress-bar\\src\\index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  customLabelStyles?: React.CSSProperties;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n  dir?: \"ltr\" | \"rtl\" | \"auto\";\n  ariaValuemin?: number;\n  ariaValuemax?: number;\n  ariaValuetext?: number | null;\n  maxCompleted?: number;\n  customLabel?: string;\n  animateOnRender?: boolean;\n  barContainerClassName?: string;\n  completedClassName?: string;\n  labelClassName?: string;\n  initCompletedOnAnimation?: string | number;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor,\n  completed,\n  baseBgColor,\n  height,\n  width,\n  margin,\n  padding,\n  borderRadius,\n  labelAlignment,\n  labelColor,\n  labelSize,\n  isLabelVisible,\n  customLabelStyles,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n  dir,\n  ariaValuemin,\n  ariaValuemax,\n  ariaValuetext,\n  maxCompleted,\n  customLabel,\n  animateOnRender,\n  barContainerClassName,\n  completedClassName,\n  labelClassName,\n  initCompletedOnAnimation = 0,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const initCompletedOnAnimationStr =\n    typeof initCompletedOnAnimation === \"number\"\n      ? `${initCompletedOnAnimation}%`\n      : initCompletedOnAnimation;\n\n  const getFillerWidth = (\n    maxCompletedValue: ProgressBarProps[\"maxCompleted\"],\n    completedValue: ProgressBarProps[\"completed\"]\n  ) => {\n    if (maxCompletedValue) {\n      const ratio = Number(completedValue) / maxCompletedValue;\n      return ratio > 1 ? \"100%\" : `${ratio * 100}%`;\n    }\n    return initCompletedOnAnimationStr;\n  };\n\n  const fillerWidth = getFillerWidth(maxCompleted, completed);\n\n  const [initWidth, setInitWidth] = React.useState<string>(\n    initCompletedOnAnimationStr\n  );\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    background: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n    overflow: \"hidden\",\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: animateOnRender ? initWidth : fillerWidth,\n    background: bgColor,\n    transition: `width ${transitionDuration || \"1s\"} ${\n      transitionTimingFunction || \"ease-in-out\"\n    }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n    ...customLabelStyles,\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  const completedStr =\n    typeof completed === \"number\" ? `${completed}%` : `${completed}`;\n\n  const labelStr = customLabel ? customLabel : completedStr;\n\n  React.useEffect(() => {\n    if (animateOnRender) {\n      requestAnimationFrame(() => setInitWidth(fillerWidth));\n    }\n  }, [fillerWidth, animateOnRender]);\n\n  return (\n    <div\n      style={className ? undefined : outsideStyles}\n      className={className}\n      dir={dir}\n      role=\"progressbar\"\n      aria-valuenow={parseFloat(labelStr)}\n      aria-valuemin={ariaValuemin}\n      aria-valuemax={ariaValuemax}\n      aria-valuetext={`${ariaValuetext === null ? labelStr : ariaValuetext}`}\n    >\n      <div\n        style={barContainerClassName ? undefined : containerStyles}\n        className={barContainerClassName}\n      >\n        <div\n          style={completedClassName ? undefined : fillerStyles}\n          className={completedClassName}\n        >\n          {labelAlignment !== \"outside\" && (\n            <span\n              style={labelClassName ? undefined : labelStyles}\n              className={labelClassName}\n            >\n              {labelStr}\n            </span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span\n          style={labelClassName ? undefined : labelStyles}\n          className={labelClassName}\n        >\n          {labelStr}\n        </span>\n      )}\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  bgColor: PropTypes.string,\n  baseBgColor: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  borderRadius: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes.string,\n  labelSize: PropTypes.string,\n  isLabelVisible: PropTypes.bool,\n  className: PropTypes.string,\n  dir: PropTypes.oneOf([\"rtl\", \"ltr\", \"auto\"]),\n  maxCompleted: PropTypes.number,\n  customLabel: PropTypes.string,\n  animateOnRender: PropTypes.bool,\n  barContainerClassName: PropTypes.string,\n  completedClassName: PropTypes.string,\n  labelClassName: PropTypes.string,\n  initCompletedOnAnimation: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n  dir: \"ltr\",\n  ariaValuemin: 0,\n  ariaValuemax: 100,\n  ariaValuetext: null,\n  maxCompleted: 100,\n  animateOnRender: false,\n  initCompletedOnAnimation: 0,\n};\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}